---
#
# datadog
#
# Overview:
#
# Installs datadog
##
# Dependencies:
#
# Example play:
#   roles:
#   - common
#   - datadog
#
- name: Install debian needed pkgs
  apt:
    name: "{{ datadog_debian_pkgs }}"
    state: present
  tags:
    - datadog

- name: Add apt key for datadog
  apt_key:
    id: "33EE313BAD9589B7"
    url: "{{ COMMON_UBUNTU_APT_KEYSERVER }}{{ datadog_apt_key }}"
    state: present
  tags:
    - datadog

- name: Install apt repository for datadog
  apt_repository:
    repo: 'deb http://apt.datadoghq.com/ stable 7'
    state: present
    update_cache: yes
  tags:
    - datadog

- name: Install datadog agent
  apt:
    name: "datadog-agent={{ DATADOG_AGENT_VERSION }}"
  tags:
    - datadog

- name: Bootstrap config
  shell: cp datadog.yaml.example datadog.yaml
  args:
    chdir: /etc/datadog-agent/
    creates: /etc/datadog-agent/datadog.yaml
  tags:
    - datadog

- name: Update api-key
  lineinfile:
    dest: "/etc/datadog-agent/datadog.yaml"
    regexp: "^api_key:.*"
    line: "api_key: {{ DATADOG_API_KEY }}"
  no_log: true
  notify:
    - restart the datadog service
  tags:
    - datadog

- name: Update site
  lineinfile:
    dest: "/etc/datadog-agent/datadog.yaml"
    regexp: "^# site:.*"
    line: "site: {{ DATADOG_SITE }}"
  notify:
    - restart the datadog service
  tags:
    - datadog

- name: Write MongoDB monitoring config
  template:
    src: "conf.yaml.j2"
    dest: "/etc/datadog-agent/conf.d/mongo.d/conf.yaml"
    owner: "{{ datadog_user }}"
    group: "{{ datadog_user }}"
    mode: 0644
  no_log: true
  notify:
    - restart the datadog service
  tags:
    - datadog
  when: DATADOG_MONGODB_MONITORING | default(false) | bool

- name: Ensure started and enabled
  service:
    name: datadog-agent
    state: started
    enabled: yes
  tags:
    - datadog
